Write a program that demonstrates handling of exceptions in inheritance tree. Create a base class called
“Father” and derived class called “Son” which extends the base class. In Father class, implement a
constructor which takes the age and throws the exception WrongAge( ) when the input age<0. In Son class,
implement a constructor that cases both father and son’s age and throws an exception if son’s age is
>=father’s age.
import java.util.Scanner;

class WrongAge extends Exception {
    WrongAge(String message) {
        super(message);
    }
}

class Father {
    int fatherAge;

    Father() throws WrongAge {
        Scanner s = new Scanner(System.in);
        System.out.println("Enter Father's age");
        fatherAge = s.nextInt();
        if (fatherAge < 0)
            throw new WrongAge("Age cannot be negative");
    }

    void display() {
        System.out.println("Father's Age is " + fatherAge);
    }
}

class Son extends Father {
    int sonAge;

    Son() throws WrongAge {
        super();
        Scanner s = new Scanner(System.in);
        System.out.println("Enter the son's age");
        sonAge = s.nextInt();
        if (sonAge >= fatherAge) {
            throw new WrongAge("Son's age cannot be greater than father's age");
        } else if (sonAge < 0) {
            throw new WrongAge("Age cannot be negative");
        }
    }

    void display() {
        super.display();
        System.out.println("Son's age is " + sonAge);
    }
}

public class ExceptionHandling {
    public static void main(String args[]) {
        try {
            Son son = new Son();
            son.display();
        } catch (WrongAge e) {
            System.out.println("Error: " + e.getMessage());
        }
    }
}

