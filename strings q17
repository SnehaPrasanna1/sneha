17. Design a class which represents a student. Every student record is made up of thefollowing
fields. i) Registration number (int) ii) Full Name (String) iii) Semester (short) iv) CGPA (float)

Write member functions to do the following.
a) Provide default and parameterized constructors to this class
b) Write display method which displays the record. Test the class by writing suitable main
method.
c) Create an array of student record to store minimum of 5 records in it.
Input the records and display them.
d. Perform the following operations by adding member functions to the program implemented in
the above question i) Sort the student records with respect to CGPA. ii) Sort the student record
with respect to name.

import java.util.Arrays;
import java.util.Comparator;
import java.util.Scanner;

class Student {
    private int regNumber;
    private String fullName;
    private short semester;
    private float cgpa;

    // Default constructor
    public Student() {
        // Initialize with default values
        regNumber = 0;
        fullName = "";
        semester = 1;
        cgpa = 0.0f;
    }

    // Parameterized constructor
    public Student(int regNumber, String fullName, short semester, float cgpa) {
        this.regNumber = regNumber;
        this.fullName = fullName;
        this.semester = semester;
        this.cgpa = cgpa;
    }

    // Display method
    public void display() {
        System.out.println("Registration Number: " + regNumber);
        System.out.println("Full Name: " + fullName);
        System.out.println("Semester: " + semester);
        System.out.println("CGPA: " + cgpa);
        System.out.println();
    }

    // Getter for CGPA (for sorting purposes)
    public float getCGPA() {
        return cgpa;
    }

    // Getter for Full Name (for sorting purposes)
    public String getFullName() {
        return fullName;
    }
}

public class StudentRecordsDemo {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // Create an array of student records
        Student[] students = new Student[5];

        // Input student records
        for (int i = 0; i < students.length; i++) {
            System.out.println("Enter details for Student " + (i + 1) + ":");
            System.out.print("Registration Number: ");
            int regNumber = scanner.nextInt();
            scanner.nextLine(); // Consume the newline character
            System.out.print("Full Name: ");
            String fullName = scanner.nextLine();
            System.out.print("Semester: ");
            short semester = scanner.nextShort();
            System.out.print("CGPA: ");
            float cgpa = scanner.nextFloat();

            students[i] = new Student(regNumber, fullName, semester, cgpa);
        }

        // Display the student records
        System.out.println("\nStudent Records:\n");
        for (Student student : students) {
            student.display();
        }

        // Sorting student records by CGPA
        Arrays.sort(students, Comparator.comparing(Student::getCGPA));

        // Display sorted student records by CGPA
        System.out.println("Sorted by CGPA:\n");
        for (Student student : students) {
            student.display();
        }

        // Sorting student records by Name
        Arrays.sort(students, Comparator.comparing(Student::getFullName));

        // Display sorted student records by Name
        System.out.println("Sorted by Name:\n");
        for (Student student : students) {
            student.display();
        }
    }
}
